---
import { MarkdownInstance } from "astro";
export type Props = {
  posts: MarkdownInstance<PostFrontmatter>[];
  tagData: Tag;
}

import { blogTags } from "@data/tags";
import { PostFrontmatter, Tag } from "src/types";
import { queryPosts } from "@utils/posts";
import BlogLayout from "@layouts/BlogLayout.astro";

export const getStaticPaths = async () => {
  console.log('Building paths for blog tags');
  const allPosts = await Astro.glob<PostFrontmatter>('../content/*.md');

  return await Promise.all(blogTags.map(tag => {
    const posts = queryPosts(allPosts, { tag: tag.name });
    return {
      params: { tag: tag.name },
      props: { posts, tagData: tag },
    };
  }));
}

const { tag } = Astro.params;
const { posts, tagData } = Astro.props as Props;
---

<BlogLayout metaTags={{ title: `JG - ${tagData.title}`}}>
  <h1>{tag}</h1>
  {posts.map(post => (
  <div>{post.frontmatter.title} - {post.frontmatter.date}</div>
  ))}
</BlogLayout>
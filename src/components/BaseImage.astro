---
import type { AllowedImageFormats } from '@src/types';

import { nanoid } from 'nanoid';

export type Props = {
  path: string;
  name: string;
  alt: string;
  widths: Array<number>;
  borderRadiusTop?: string;
  borderRadiusBottom?: string;
  fileExtension?: AllowedImageFormats;
};

const { path, name, alt, widths, borderRadiusTop, borderRadiusBottom, fileExtension = 'jpg' } =
  Astro.props as Props;

const baseImagePath = `${import.meta.env.IMAGEKIT_URL}/${path}/${name}.${fileExtension}`;

console.info('Building image with baseImagePath: ', baseImagePath);

const maxWidth = widths[widths.length - 1];

const initSrc = `${baseImagePath}?tr=w-50,bl-10`;
const defaultSrc = `${baseImagePath}?tr=w-${maxWidth}`;

const srcSet = widths.map((width) => `${baseImagePath}?tr=w-${width}`).join(',');



const imgId = nanoid(6);
---

<img
  data-placeholder-id={imgId}
  class="placeholder"
  src={initSrc}
  width={2400}
  style={{
    'border-top-left-radius': borderRadiusTop ?? 0,
    'border-top-right-radius': borderRadiusTop ?? 0,
    'border-bottom-left-radius': borderRadiusBottom ?? 0,
    'border-bottom-right-radius': borderRadiusBottom ?? 0,
  }}
/>
<picture>
  <source
    type="image/jpeg"
    sizes="(max-width: 1024px) 100vw, 1024px"
    srcset={srcSet}
  />
  <img
    style={{
      'border-top-left-radius': borderRadiusTop ?? 0,
      'border-top-right-radius': borderRadiusTop ?? 0,
      'border-bottom-left-radius': borderRadiusBottom ?? 0,
      'border-bottom-right-radius': borderRadiusBottom ?? 0,
      display: 'none',
    }}
    class="picture"
    data-img-id={imgId}
    alt={alt}
    src={defaultSrc}
  />
</picture>

<script>
  import imageLoader from '@src/scripts/imageLoader';
  document.addEventListener('astro:after-swap', () => {
    imageLoader();
  });
</script>

<style lang="css">
  .picture,
  .placeholder {
    display: block;
    margin: auto;
    max-width: 100%;
  }
</style>
